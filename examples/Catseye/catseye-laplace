#!/bin/bash

nqa=7
nqp=7
nqu=25
tol=1e-6
eta=1.5
depth=4
order=8
nthreads=2

## path to executables
bin=../../tools

## store geometry and matrix data in subdirectories
gfile=Geometries/catseye-${nqp}.nbi
mfile=Matrices/matrix-catseye-${nqp}-${nqu}-${order}-${depth}.dat
## generate the spherical surface
##${bin}/nbi-surface -q ${nqp} -a catseye.agg -o ${gfile}
#${bin}/nbi-surface -q ${nqp} -m catseye.geo -o ${gfile}

## generate an option list for nbi-assemble-laplace and display it
opts="-e ${tol} -a ${nqa} -u ${nqu} -n ${eta} -d ${depth} -N ${order} \
      -m ${mfile} -g ${gfile}"
echo -- ${opts}
## assemble the problem matrices
#${bin}/nbi-assemble-laplace ${opts} -T ${nthreads}
## generate an option list for nbi-solve-laplace and display it
opts="-m ${mfile} -g ${gfile} -D 5 -o 10 -d 2 -t ${tol} \
      -f -T ${nthreads} -b psource.bc -s solution.dat"
echo ${opts}
## solve the problem
${bin}/nbi-solve-laplace ${opts}
## generate 33x33 grid in plane z=2.5, -2 < x, y < 2 for visualization
${bin}/nbi-surface -g grid-xy -d -2 -d -2 -d 2 -d 2 -d 2.5 \
      -i 33 -i 33 > grid.nbi
## field generated by surface solution (negative of incident field)
${bin}/nbi-field-laplace -g ${gfile} -d solution.dat -F grid.nbi > grid.dat
## adding the incident term for an internal source should give zero field
${bin}/nbi-field-laplace -g ${gfile} -d solution.dat \
      -F grid.nbi -b psource.bc > error.dat
## generate gmsh files for visualization
${bin}/nbi-process -v "Point source field" -d grid.dat -g grid.nbi -r 2 > grid.msh
## error surface
${bin}/nbi-process -v "Error in field" -d error.dat -g grid.nbi -r 2 > error.msh
