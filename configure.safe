#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT([nbi], [0.1.0], [codes@paraffinalia.co.uk])
##AM_INIT_AUTOMAKE
AC_CONFIG_SRCDIR([src/nbi.c])
AC_CONFIG_HEADERS([config.h])

NBI_MAJOR_VERSION=0
NBI_MINOR_VERSION=1
NBI_MICRO_VERSION=0
NBI_INTERFACE_AGE=0
NBI_BINARY_AGE=0
NBI_VERSION=$NBI_MAJOR_VERSION.$NBI_MINOR_VERSION.$NBI_MICRO_VERSION

# libtool versioning
LT_RELEASE=$NBI_MAJOR_VERSION.$NBI_MINOR_VERSION
LT_CURRENT=`expr $NBI_MICRO_VERSION - $NBI_INTERFACE_AGE`
LT_REVISION=$NBI_INTERFACE_AGE
LT_AGE=`expr $NBI_BINARY_AGE - $NBI_INTERFACE_AGE`
AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

# For automake.
VERSION=$NBI_VERSION
PACKAGE=nbi

AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

AM_INIT_AUTOMAKE(subdir-objects)

AC_DEFINE_UNQUOTED(NBI_INTERFACE_AGE, $NBI_INTERFACE_AGE, [Interface age])
AC_DEFINE_UNQUOTED(NBI_BINARY_AGE, $NBI_BINARY_AGE, [Binary age])

AM_PROG_LIBTOOL

# Checks for programs.
AC_PROG_CC
AM_PROG_CC_C_O

# Checks for typedefs, structures, and compiler characteristics.
AX_GCC_X86_CPU_SUPPORTS(avx, hasavx=yes) 
AX_GCC_X86_CPU_SUPPORTS(avx2, hasavx2=yes) 
AX_GCC_X86_CPU_SUPPORTS(fma, hasfma=yes) 

if test x$hasavx = xyes; then
   SIMD_FLAGS="$SIMD_FLAGS -mavx"
fi
if test x$hasfma = xyes; then
   SIMD_FLAGS="$SIMD_FLAGS -mfma"
fi

if test x$GCC = xyes ; then
echo HELLO
  CFLAGS="$CFLAGS -Wall -Werror-implicit-function-declaration \
  		  -Wstrict-prototypes -Wmissing-prototypes \
		  -Wmissing-declarations"
echo CFLAGS=$CFLAGS
fi

AC_PROG_F77

AC_PROG_AWK
AC_ISC_POSIX
AC_HEADER_STDC

PKG_PROG_PKG_CONFIG()

# Checks for libraries.
AC_CHECK_PROG(SQT, sqt-config, yes, no)
if test x$SQT = xyes ; then
   AC_DEFINE(HAVE_SQT, 1, [singular quadrature library available])
   sqt_cflags=`sqt-config --cflags`
   sqt_libs=`sqt-config --libs`
else
  echo \#################################################################
  echo \#
  echo \# Singular Quadrature on Triangles library not installed or
  echo \# not properly installed. You can get it from
  echo \#
  echo \# https://github.com/mjcarley/sqt
  echo \#
  echo \#################################################################
  exit
fi

AC_CHECK_PROG(BLASWRAP, blaswrap-config, yes, no)
if test x$BLASWRAP = xyes ; then
   AC_DEFINE(HAVE_BLASWRAP, 1, [BLAS wrapper header available])
   blaswrap_cflags=`blaswrap-config --cflags`
   blaswrap_libs=`blaswrap-config --libs`
else
  echo \#################################################################
  echo \#
  echo \# BLAS wrapper library not installed or not properly installed.
  echo \# You can get it from
  echo \#
  echo \# https://github.com/mjcarley/blaswrap
  echo \#
  echo \#################################################################
  exit
fi

# Checks for header files.



AC_CHECK_LIB(m, cos)
AC_CONFIG_MACRO_DIR([m4])

AC_OPENMP
AC_PROG_F77
AC_F77_LIBRARY_LDFLAGS
AC_F77_DUMMY_MAIN
AC_F77_WRAPPERS
ACX_BLAS
ACX_LAPACK

blas_libs="$BLAS_LIBS"
lapack_libs="$LAPACK_LIBS"

CFLAGS="$CFLAGS $OPENMP_CFLAGS $SIMD_FLAGS $sqt_cflags $blaswrap_cflags"
LDFLAGS="$LDFLAGS"

AC_SUBST(blas_libs)
AC_SUBST(lapack_libs)
AC_SUBST(sqt_cflags)
AC_SUBST(sqt_libs)
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS $sqt_libs"

# Checks for library functions.

AC_CONFIG_FILES([
Makefile
src/Makefile
src/nbi-config
tools/Makefile])

AC_OUTPUT
